name: Build and Publish Package

on:
  push:
    tags:
      - '*'  # Trigger on any tag

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for changelog generation
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Extract tag version
      id: get_version
      run: |
        # Get tag name and strip any 'v' prefix if present
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "TAG=$TAG" >> $GITHUB_ENV
    
    - name: Create virtual environment and install dependencies
      run: |
        # Create virtual environment
        uv venv
        # Activate virtual environment
        source .venv/bin/activate
        # Install dependencies
        uv pip install ruff pytest toml
        uv pip install -e .
        # Install additional dependencies for later steps
        uv pip install build twine
    
    - name: Run linting
      run: |
        source .venv/bin/activate
        uv run ruff check .
    
    - name: Run tests
      run: |
        source .venv/bin/activate
        uv run pytest
    
    - name: Update version in pyproject.toml
      run: |
        source .venv/bin/activate
        python .github/scripts/update_version.py $VERSION
    
    - name: Generate changelog updates
      run: |
        bash .github/scripts/generate_changelog.sh $TAG
    
    - name: Build package
      run: |
        source .venv/bin/activate
        python -m build
    
    - name: Publish to PyPI
      env:
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        source .venv/bin/activate
        python -m twine upload --skip-existing --repository pypi dist/* -u __token__ -p $PYPI_API_TOKEN
    
    - name: Commit version and changelog updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml CHANGELOG.md
        git commit -m "Update version to $VERSION and changelog [skip ci]" || echo "No changes to commit"
        git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main || echo "No changes to push"